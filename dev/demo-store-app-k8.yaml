apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-store-app-backend-deployment
spec:
  selector:
    matchLabels:
      app: demo-store-app-k8-sql
  replicas: 1
  template:
    metadata:
      labels:
        app: demo-store-app-k8-sql
    spec:
      containers:
        - name: demo-store-app-backend
          image: matttollner/demo-store-app-backend
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              value: mysql
              #valueFrom :
              #  configMapKeyRef :
              #    name : db-config
              #    key :  host

            - name: DB_NAME  # Setting Database name from configMap
              value: demo-store-app
              #valueFrom :
               # configMapKeyRef :
                #  name : db-config
                #  key :  dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              value: root
              #valueFrom :
              #  secretKeyRef :
              #    name : mysql-secrets
              #    key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              value: root
              #valueFrom :
              #  secretKeyRef :
              #    name : mysql-secrets
              #    key :  password

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: springboot-crud-svc
spec:
  selector:
    app: demo-store-app-k8-sql
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: NodePort # type of the service.
